-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema K8292_2
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema K8292_2
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `K8292_2` DEFAULT CHARACTER SET utf8 ;
USE `K8292_2` ;

-- -----------------------------------------------------
-- Table `K8292_2`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `K8292_2`.`User` (
  `UserID` INT NOT NULL,
  `FirstName` VARCHAR(45) NOT NULL,
  `LastName` VARCHAR(45) NOT NULL,
  `Email` VARCHAR(45) NOT NULL,
  `Password` VARCHAR(45) NOT NULL,
  `CreatedAt` DATETIME NOT NULL,
  PRIMARY KEY (`UserID`),
  UNIQUE INDEX `Email_UNIQUE` (`Email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `K8292_2`.`Campaign`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `K8292_2`.`Campaign` (
  `CampaignID` INT NOT NULL,
  `CampaignCode` VARCHAR(45) NOT NULL,
  `StartsAt` DATETIME NOT NULL,
  `EndsAt` DATETIME NOT NULL,
  PRIMARY KEY (`CampaignID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `K8292_2`.`Product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `K8292_2`.`Product` (
  `ProductID` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  `Description` VARCHAR(45) NOT NULL,
  `CampaignID` INT NOT NULL,
  `Price` DOUBLE NOT NULL,
  PRIMARY KEY (`ProductID`),
  INDEX `fk_Product_Campaign1_idx` (`CampaignID` ASC),
  CONSTRAINT `fk_Product_Campaign1`
    FOREIGN KEY (`CampaignID`)
    REFERENCES `K8292_2`.`Campaign` (`CampaignID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `K8292_2`.`Profile`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `K8292_2`.`Profile` (
  `ProfileID` INT NOT NULL,
  `AvatarIMG` VARCHAR(45) NULL,
  `ProfileDesc` VARCHAR(45) NULL,
  `UserID` INT NOT NULL,
  PRIMARY KEY (`ProfileID`),
  INDEX `fk_Profile_User_idx` (`UserID` ASC),
  CONSTRAINT `fk_Profile_User`
    FOREIGN KEY (`UserID`)
    REFERENCES `K8292_2`.`User` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `K8292_2`.`Comment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `K8292_2`.`Comment` (
  `CommentID` INT NOT NULL,
  `CommentTXT` VARCHAR(45) NOT NULL,
  `CreatedAt` DATETIME NOT NULL,
  `ProfileID` INT NOT NULL,
  `fk_CommentID` INT NULL,
  PRIMARY KEY (`CommentID`),
  INDEX `fk_Comment_Profile1_idx` (`ProfileID` ASC),
  INDEX `FK_CommentID_idx` (`fk_CommentID` ASC),
  CONSTRAINT `fk_Comment_Profile1`
    FOREIGN KEY (`ProfileID`)
    REFERENCES `K8292_2`.`Profile` (`ProfileID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_CommentID`
    FOREIGN KEY (`fk_CommentID`)
    REFERENCES `K8292_2`.`Comment` (`CommentID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `K8292_2`.`Payment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `K8292_2`.`Payment` (
  `PaymentID` INT NOT NULL,
  `PaymentType` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`PaymentID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `K8292_2`.`Order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `K8292_2`.`Order` (
  `OrderID` INT NOT NULL,
  `TotalPrice` DOUBLE NOT NULL,
  `Status` ENUM('pending', 'processing', 'completed') NOT NULL,
  `UserID` INT NOT NULL,
  `PaymentID` INT NOT NULL,
  `CreatedAt` DATETIME NOT NULL,
  PRIMARY KEY (`OrderID`),
  INDEX `fk_Order_User1_idx` (`UserID` ASC),
  INDEX `fk_Order_Payment1_idx` (`PaymentID` ASC),
  CONSTRAINT `fk_Order_User1`
    FOREIGN KEY (`UserID`)
    REFERENCES `K8292_2`.`User` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Order_Payment1`
    FOREIGN KEY (`PaymentID`)
    REFERENCES `K8292_2`.`Payment` (`PaymentID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `K8292_2`.`Category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `K8292_2`.`Category` (
  `CategoryID` INT NOT NULL,
  `CategoryName` VARCHAR(45) NOT NULL,
  `CategoryDesc` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`CategoryID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `K8292_2`.`Licenses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `K8292_2`.`Licenses` (
  `LicenseID` INT NOT NULL,
  `LicenseKey` VARCHAR(45) NOT NULL,
  `ProductID` INT NOT NULL,
  `UserID` INT NOT NULL,
  PRIMARY KEY (`LicenseID`),
  INDEX `fk_Licenses_Product1_idx` (`ProductID` ASC),
  INDEX `fk_Licenses_User1_idx` (`UserID` ASC),
  UNIQUE INDEX `LicenseKey_UNIQUE` (`LicenseKey` ASC),
  CONSTRAINT `fk_Licenses_Product1`
    FOREIGN KEY (`ProductID`)
    REFERENCES `K8292_2`.`Product` (`ProductID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Licenses_User1`
    FOREIGN KEY (`UserID`)
    REFERENCES `K8292_2`.`User` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `K8292_2`.`Review`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `K8292_2`.`Review` (
  `ReviewID` INT NOT NULL,
  `ReviewContent` VARCHAR(45) NOT NULL,
  `CreatedAt` DATETIME NOT NULL,
  `Status` TINYINT NOT NULL,
  `Rating` INT(1) NOT NULL,
  `ProductID` INT NOT NULL,
  `UserID` INT NOT NULL,
  PRIMARY KEY (`ReviewID`),
  INDEX `fk_Review_Product1_idx` (`ProductID` ASC),
  INDEX `fk_Review_User1_idx` (`UserID` ASC),
  CONSTRAINT `fk_Review_Product1`
    FOREIGN KEY (`ProductID`)
    REFERENCES `K8292_2`.`Product` (`ProductID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Review_User1`
    FOREIGN KEY (`UserID`)
    REFERENCES `K8292_2`.`User` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `K8292_2`.`Product_has_Category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `K8292_2`.`Product_has_Category` (
  `ProductID` INT NOT NULL,
  `CategoryID` INT NOT NULL,
  PRIMARY KEY (`ProductID`, `CategoryID`),
  INDEX `fk_Product_has_Category_Category1_idx` (`CategoryID` ASC),
  INDEX `fk_Product_has_Category_Product1_idx` (`ProductID` ASC),
  CONSTRAINT `fk_Product_has_Category_Product1`
    FOREIGN KEY (`ProductID`)
    REFERENCES `K8292_2`.`Product` (`ProductID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Product_has_Category_Category1`
    FOREIGN KEY (`CategoryID`)
    REFERENCES `K8292_2`.`Category` (`CategoryID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `K8292_2`.`Order_has_Licenses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `K8292_2`.`Order_has_Licenses` (
  `OrderID` INT NOT NULL,
  `LicenseID` INT NOT NULL,
  PRIMARY KEY (`OrderID`, `LicenseID`),
  INDEX `fk_Order_has_Licenses_Licenses1_idx` (`LicenseID` ASC),
  INDEX `fk_Order_has_Licenses_Order1_idx` (`OrderID` ASC),
  CONSTRAINT `fk_Order_has_Licenses_Order1`
    FOREIGN KEY (`OrderID`)
    REFERENCES `K8292_2`.`Order` (`OrderID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Order_has_Licenses_Licenses1`
    FOREIGN KEY (`LicenseID`)
    REFERENCES `K8292_2`.`Licenses` (`LicenseID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- MySQL Workbench Synchronization
-- Generated: 2018-04-10 16:03
-- Model: New Model
-- Version: 1.0
-- Project: Name of the project
-- Author: K8292

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

ALTER TABLE `K8292_2`.`Campaign_has_Product` 
DROP FOREIGN KEY `fk_Campaign_has_Product_Campaign1`,
DROP FOREIGN KEY `fk_Campaign_has_Product_Product1`;

ALTER TABLE `K8292_2`.`Campaign_has_Product` 
CHANGE COLUMN `Campaign_CampaignID` `CampaignID` INT(11) NOT NULL ,
CHANGE COLUMN `Product_ProductID` `ProductID` INT(11) NOT NULL ;

ALTER TABLE `K8292_2`.`Campaign_has_Product` 
ADD CONSTRAINT `fk_Campaign_has_Product_Campaign1`
  FOREIGN KEY (`CampaignID`)
  REFERENCES `K8292_2`.`Campaign` (`CampaignID`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION,
ADD CONSTRAINT `fk_Campaign_has_Product_Product1`
  FOREIGN KEY (`ProductID`)
  REFERENCES `K8292_2`.`Product` (`ProductID`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

